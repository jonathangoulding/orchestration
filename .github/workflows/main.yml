name: CI

on:
  push:
    branches: ['**']

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  BRANCH: ${GITHUB_REF##*/}

jobs:
  unit-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 16.x ]
        app: ['basket-api', 'plant-api']
    name: Unit Test - ${{ matrix.app }} - Node.js ${{ matrix.node-version }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
          cache: 'npm'
          cache-dependency-path: './applications/${{ matrix.app }}/package-lock.json'
      - name: Run tests
        working-directory: ./applications/${{ matrix.app }}
        run: |
          npm ci
          npm run test

  audit:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 16.x ]
        app: [ 'basket-api', 'plant-api' ]
    name: Audit - ${{ matrix.app }} - Node.js ${{ matrix.node-version }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
          cache: 'npm'
          cache-dependency-path: './applications/${{ matrix.app }}/package-lock.json'
      - name: Run npm audit
        working-directory: ./applications/${{ matrix.app }}
        run: |
          npm ci
          npm audit

  coverage:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 16.x ]
        app: [ 'basket-api', 'plant-api' ]
    name: Coverage - ${{ matrix.app }} - Node.js ${{ matrix.node-version }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
          cache: 'npm'
          cache-dependency-path: './applications/${{ matrix.app }}/package-lock.json'
      - name: Run coverage
        working-directory: ./applications/${{ matrix.app }}
        run: |
          npm ci
          npm run coverage

  test-orchestration:
    runs-on: ubuntu-latest
    needs: [ unit-test, audit, coverage ]
    strategy:
      matrix:
        node-version: [ 16.x ]
        app: [ 'basket-api', 'plant-api' ]
    name: Orchestration Test - ${{ matrix.app }} - Node.js ${{ matrix.node-version }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
          cache: 'npm'
          cache-dependency-path: './applications/${{ matrix.app }}/package-lock.json'
      - name: Run tests
        run: |
          sh orchestration/pm2/start.sh
          sleep 30
          cd test/system-tests
          npm run test:${{ matrix.app }}
          cd ../../
          sh orchestration/pm2/stop.sh

  build-and-push-image:
    runs-on: ubuntu-latest
    needs: [ unit-test, audit, coverage ]
    strategy:
      matrix:
        app: [ 'basket-api', 'plant-api' ]
    name: Build and Push ${{ matrix.app }} image
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/${{ matrix.app }}

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: ./applications/${{ matrix.app }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
  
  test-images:
    runs-on: ubuntu-latest
    needs: [ build-and-push-image ]
    name: Test Orchestration
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Run orchestration test
        run: |
          echo ${{ env.BRANCH }}
          sh orchestration/docker/start.sh ${{ env.BRANCH }}
          docker ps
          sleep 30
          cd test/system-tests
          npm test

  deploy:
    runs-on: ubuntu-latest
    needs: [test-orchestration, test-images ]
    steps:
      - uses: actions/checkout@v2
      - run: echo "No Deploy Fridays"